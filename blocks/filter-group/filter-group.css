.filter-group {
  padding-inline-end: 0;
  margin: 1.5rem calc(var(--page-gutters) * -1) 1.5rem auto;

  @media (min-width: 76rem) {
    margin-inline-end: 0;
  }
}

.filter-group__list {
  display: flex;
  gap: 0.5rem;
  overflow-x: auto;
  padding-block: 0.5rem 1rem;
  padding-inline-start: 0;
  scrollbar-width: none; /* Firefox */
  border-bottom: 1px solid var(--spectrum-gray-700);
  transition: padding-inline-start 100ms ease-in-out;

  @media (min-width: 80rem) {
    border-bottom: none;
  }
}

/* Hide scrollbar for Chrome, Safari and Opera */
.filter-group__list::-webkit-scrollbar {
  display: none;
}

/* Adds left padding on focus to avoid outline cutoff on the first element. */
.filter-group__list:has(.filter-group__button:focus-visible) {
  padding-inline-start: calc(var(--focus-outline-size) + var(--focus-outline-offset));
}

.filter-group__label {
  margin-block-end: 0.5rem;
  color: var(--color-text-dark);
}

.filter-group__button {
  --border-radius-button-filters: var(--spectrum-corner-radius-600);
  --focus-border-radius: var(--border-radius-button-filters);
  --color-background-button-filters-default: var(
    --spectrum-transparent-black-300
  );
  --color-background-button-filters-hover: var(
    --spectrum-transparent-black-400
  );
  --color-background-button-filters-disabled: var(--spectrum-gray-100);
  --color-text-button-filters-disabled: var(--spectrum-gray-400);

  display: inline-flex;
  align-items: center;
  justify-content: center;
  padding: 0.625rem 1rem;
  border-radius: var(--border-radius-button-filters);
  border: none;
  background-color: var(--color-background-button-filters-default);
  color: var(--color-text-dark);
  flex-shrink: 0;
  transition: all var(--spectrum-animation-duration-100) ease;

  &:focus-visible {
    background-color: var(--color-background-button-filters-default);
    color: inherit;
  }

  @media (hover: hover) {
    &:hover {
      background-color: var(--color-background-button-filters-hover);
      color: var(--color-text-dark);
      cursor: pointer;
    }
  }

  &:is(:disabled, :disabled:hover) {
    background-color: var(--color-background-button-filters-disabled);
    color: var(--color-text-button-filters-disabled);
    cursor: not-allowed;
    opacity: 1;
  }
}

.filter-group__button:last-child {
  margin-right: 0.5rem;

  @media (min-width: 80rem) {
    margin-right: 0;
  }
}

.filter-group__button--selected {
  --color-background-button-filters-selected: var(--color-text-dark);
  --color-background-button-filters-selected--unformatted: 19 19 19;
  background-color: var(--color-background-button-filters-selected);
  color: var(--spectrum-gray-50);
  transition: all var(--spectrum-animation-duration-100) ease;

  &:focus-visible {
    background-color: var(--color-background-button-filters-selected);
    color: var(--spectrum-gray-50);
  }

  @media (hover: hover) {
    &:hover {

      /* from syntax is not always supported, this is a fallback */
      background-color: rgb(var(--color-background-button-filters-selected--unformatted) / 0.9);

      /* both are needed to elegantly break if color-text-dark changes */
      background-color: rgb(from var(--color-background-button-filters-selected) r g b / 0.9);
      color: var(--spectrum-gray-50);
    }
  }
}

:root:has(#color-scheme:checked) .filter-group__button {
  --color-background-button-filters-default: var(
    --spectrum-transparent-white-200
  );
  --color-background-button-filters-hover: var(
    --spectrum-transparent-white-500
  );

  --color-background-button-filters-selected--unformatted: 242 242 242;
}

