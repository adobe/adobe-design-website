/*
 * Copyright 2025 Adobe. All rights reserved.
 * This file is licensed to you under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License. You may obtain a copy
 * of the License at http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under
 * the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS
 * OF ANY KIND, either express or implied. See the License for the specific language
 * governing permissions and limitations under the License.
 */

body {
  background-color: var(--color-background);
  background-size: var(--page-background-size, 100% var(--page-bg-height, 36.563rem));
  background-position: var(--page-background-position, top);
  background-repeat: no-repeat;
  background-image: var(--page-background);
  display: none;
  margin: 0;
  color: var(--color-text);
  font-family: var(--body-font-family);
  line-height: 1.5;
  font-weight: var(--spectrum-body-font-weight);
  font-size: var(--spectrum-body-size-m);
}

body.js-no-scroll {
  overflow: hidden;
  height: 100vh;
}

:root:has(#color-scheme:checked) body {
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

main > .section {
  max-width: var(--page-max-width);
  margin-inline: var(--page-gutters);

  @media (min-width: 100rem) {
    margin-inline: auto;
    max-width: var(--page-max-width);
  }
}

main picture:not([class]) > img:not([class]) {
  display: block;
  max-width: 100%;
  height: auto;
  border-radius: var(--spectrum-corner-radius-800);
}

/* ** Global Focus Styles ** */

:is(a, button, input, textarea, summary, select) {
  /* max value allows for bigger focus on zoom */
  --focus-outline-size: max(2px, 0.08em);
  --focus-outline-style: solid;
  --focus-outline-color: var(--spectrum-focus-indicator-color);
  --focus-outline-offset: 2px;
  --focus-border-radius: var(--spectrum-corner-radius-100);
}

:is(a, button, input, textarea, summary, select):focus {
  outline: var(--focus-outline-size) var(--focus-outline-style)
    var(--focus-outline-color);
  outline-offset: var(--focus-outline-offset, var(--focus-outline-size));
  border-radius: var(--focus-border-radius);
}

:is(a, button, input, textarea, summary, select):focus-visible {
  outline: var(--focus-outline-size) var(--focus-outline-style)
    var(--focus-outline-color);
  outline-offset: var(--focus-outline-offset, var(--focus-outline-size));
  border-radius: var(--focus-border-radius);
}

:is(a, button, input, textarea, summary, select):focus:not(:focus-visible) {
  outline: none;
}

/* ** Performance ** */

body.appear {
  display: block;
}

header .header,
footer .footer {
  visibility: hidden;
}

header {
  height: var(--page-nav-height);
}

header .header[data-block-status="loaded"],
footer .footer[data-block-status="loaded"] {
  visibility: visible;
}

/* ** Typography ** */

h1,
h2,
h3 {
  font-family: var(--heading-font-family);
  line-height: var(--heading-line-height);
}

h4,
h5,
h6 {
  font-family: var(--title-font-family);
  line-height: var(--title-line-height);
}

h1 {
  font-size: var(--spectrum-heading-size-xl);
  font-weight: var(--spectrum-heading-weight-xl);
}

h2 {
  font-size: var(--spectrum-heading-size-m);
  font-weight: var(--spectrum-heading-weight-m);
}

h3 {
  font-size: var(--spectrum-heading-size-s);
  font-weight: var(--spectrum-heading-weight-s);
}

h4 {
  font-size: var(--spectrum-title-size-xl);
  font-weight: var(--spectrum-title-weight-xl);
}

h5 {
  font-size: var(--spectrum-title-size-m);
  font-weight: var(--spectrum-title-weight-m);
}

h6 {
  font-size: var(--spectrum-title-size-s);
  font-weight: var(--spectrum-title-weight-s);
}

input,
textarea,
select,
button {
  font: inherit;
}

a {
  color: var(--color-text-link);
  text-decoration: none;
  overflow-wrap: break-word;
}

a:hover {
  color: var(--color-text-link-hover);
  text-decoration: underline;
}

/* ** Button ** */
.button {
  --color-button-text-disabled: rgb(from var(--spectrum-black) r g b / 22%);
  --border-radius-button: 1.5rem;
  --focus-border-radius: var(--border-radius-button);

  box-sizing: border-box;
  display: inline-flex;
  align-items: center;
  justify-content: center;
  max-width: 100%;
  padding: 0.75rem 1.25rem 0.875rem;
  border: none;
  border-radius: var(--border-radius-button);
  background-color: transparent;
  color: inherit;
  font-family: var(--body-font-family);
  font-size: var(--spectrum-font-size-300);
  font-style: normal;
  font-weight: var(--spectrum-bold-font-weight);
  line-height: 1.3;
  text-align: center;
  text-decoration: none;
  white-space: nowrap;
  cursor: pointer;

  &:hover {
    text-decoration: none;
  }

  &:disabled,
  &:disabled:hover {
    color: var(--color-button-text-disabled);
    cursor: unset;
  }
}

.button--primary {
  --color-button-background-primary: rgb(
    from var(--spectrum-black) r g b / 84%
  );
  --color-button-background-primary-hover: rgb(
    from var(--spectrum-black) r g b / 93%
  );
  --color-button-background-primary-disabled: rgb(
    from var(--spectrum-black) r g b / 9%
  );
  --color-button-text-primary: var(--spectrum-white);
  background-color: var(--color-button-background-primary);
  color: var(--color-button-text-primary);

  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;

  &:hover {
    background-color: var(--color-button-background-primary-hover);
    color: var(--color-button-text-primary);
  }

  &:disabled,
  &:disabled:hover {
    background-color: var(--color-button-background-primary-disabled);
  }
}

:root:has(#color-scheme:checked) .button--primary {
  --color-button-background-primary: rgb(
    from var(--spectrum-white) r g b / 85%
  );
  --color-button-background-primary-hover: rgb(
    from var(--spectrum-white) r g b / 94%
  );
  --color-button-background-primary-disabled: rgb(
    from var(--spectrum-white) r g b / 11%
  );
  --color-button-text-primary: var(--spectrum-gray-25);
}

.button--primary-outline {
  --color-button-border-primary-outline: rgb(
    from var(--spectrum-black) r g b / 84%
  );
  --color-button-border-primary-outline-hover: rgb(
    from var(--spectrum-black) r g b / 93%
  );
  --color-button-border-primary-outline-disabled: rgb(
    from var(--spectrum-black) r g b / 15%
  );
  --color-button-background-primary-outline-hover: rgb(
    from var(--spectrum-black) r g b / 9%
  );
  --color-button-text-primary-outline: rgb(
    from var(--spectrum-black) r g b / 84%
  );
  --color-button-text-primary-outline-hover: rgb(
    from var(--spectrum-black) r g b / 93%
  );
  --color-button-text-primary-outline-disabled: rgb(
    from var(--spectrum-black) r g b / 22%
  );

  border: 2px solid var(--color-button-border-primary-outline);
  color: var(--color-button-text-primary-outline);

  &:hover {
    border-color: var(--color-button-border-primary-outline-hover);
    background-color: var(--color-button-background-primary-outline-hover);
    color: var(--color-button-text-primary-outline-hover);
  }

  &:disabled,
  &:disabled:hover {
    border-color: var(--color-button-border-primary-outline-disabled);
    color: var(--color-button-text-primary-outline-disabled);
  }
}

:root:has(#color-scheme:checked) .button--primary-outline {
  --color-button-border-primary-outline: rgb(
    from var(--spectrum-white) r g b / 85%
  );
  --color-button-border-primary-outline-hover: rgb(
    from var(--spectrum-white) r g b / 94%
  );
  --color-button-border-primary-outline-disabled: rgb(
    from var(--spectrum-white) r g b / 17%
  );
  --color-button-background-primary-outline-hover: rgb(
    from var(--spectrum-white) r g b / 11%
  );
  --color-button-text-primary-outline: rgb(
    from var(--spectrum-white) r g b / 85%
  );
  --color-button-text-primary-outline-hover: rgb(
    from var(--spectrum-white) r g b / 94%
  );
  --color-button-text-primary-outline-disabled: rgb(
    from var(--spectrum-white) r g b / 21%
  );
}

.button--static-black {
  --color-button-border-static-black: rgb(
    from var(--spectrum-black) r g b / 84%
  );
  --color-button-border-static-black-hover: rgb(
    from var(--spectrum-black) r g b / 93%
  );
  --color-button-border-static-black-disabled: rgb(
    from var(--spectrum-black) r g b / 15%
  );
  --color-button-background-static-black-hover: rgb(
    from var(--spectrum-black) r g b / 9%
  );
  --color-button-text-static-black: rgb(from var(--spectrum-black) r g b / 84%);
  --color-button-text-static-black-hover: rgb(
    from var(--spectrum-black) r g b / 93%
  );
  --color-button-text-static-black-disabled: rgb(
    from var(--spectrum-black) r g b / 22%
  );
  --outline-color: rgb(from var(--spectrum-black) r g b / 84%);
  --focus-outline-color: var(--spectrum-black);

  border: 2px solid var(--color-button-border-static-black);
  color: var(--color-button-text-static-black);

  &:hover {
    border-color: var(--color-button-border-static-black-hover);
    background-color: var(--color-button-background-static-black-hover);
    color: var(--color-button-text-static-black-hover);
  }

  &:disabled,
  &:disabled:hover {
    border-color: var(--color-button-border-static-black-disabled);
    color: var(--color-button-text-static-black-disabled);
  }
}

.button--static-white {
  --color-button-border-static-white: rgb(
    from var(--spectrum-white) r g b / 85%
  );
  --color-button-border-static-white-hover: rgb(
    from var(--spectrum-white) r g b / 94%
  );
  --color-button-border-static-white-disabled: rgb(
    from var(--spectrum-white) r g b / 17%
  );
  --color-button-background-static-white-hover: rgb(
    from var(--spectrum-white) r g b / 11%
  );
  --color-button-text-static-white: rgb(from var(--spectrum-white) r g b / 85%);
  --color-button-text-static-white-hover: rgb(
    from var(--spectrum-white) r g b / 94%
  );
  --color-button-text-static-white-disabled: rgb(
    from var(--spectrum-white) r g b / 21%
  );
  --outline-color: rgb(from var(--spectrum-white) r g b / 85%);
  --focus-outline-color: var(--spectrum-white);

  border: 2px solid var(--color-button-border-static-white);
  color: var(--color-button-text-static-white);

  &:hover {
    border-color: var(--color-button-border-static-white-hover);
    background-color: var(--color-button-background-static-white-hover);
    color: var(--color-button-text-static-white-hover);
  }

  &:disabled,
  &:disabled:hover {
    border-color: var(--color-button-border-static-white-disabled);
    color: var(--color-button-text-static-white-disabled);
  }
}

.button--accent {
  --color-button-background-accent: var(--spectrum-blue-900);
  --color-button-background-accent-hover: var(--spectrum-blue-1000);
  --color-button-background-accent-disabled: rgb(
    from var(--spectrum-black) r g b / 9%
  );
  --color-button-text-accent: var(--spectrum-white);

  background-color: var(--color-button-background-accent);
  color: var(--color-button-text-accent);

  &:hover {
    background-color: var(--color-button-background-accent-hover);
    color: var(--color-button-text-accent);
  }

  &:disabled,
  &:disabled:hover {
    background-color: var(--color-button-background-accent-disabled);
  }
}

:root:has(#color-scheme:checked) .button--accent {
  --color-button-background-accent: var(--spectrum-blue-800);
  --color-button-background-accent-hover: var(--spectrum-blue-900);
}

.button--ghost {
  --color-button-text-ghost: var(--color-text-link);
  --color-button-text-ghost-hover: var(--color-text-link-hover);

  color: var(--color-button-text-ghost);
  font-size: var(--spectrum-font-size-200);
  font-weight: var(--spectrum-medium-font-weight);

  &:hover {
    color: var(--color-button-text-ghost-hover);
    text-decoration: underline;
  }
}

.button--hide-at-large {
  /* supports change in button location */
  /* review section header styles for detail */
  @media (min-width: 48rem) {
    display: none;
  }
}

/* **Horizontal Rule** */

.horizontal-rule-wrapper {
  overflow: hidden;
}

.horizontal-rule {
  height: 0;
  border: none;
  border-block-start: 1px solid var(--spectrum-gray-400);
  margin-block: 4rem;

  @media (min-width: 80rem) {
    margin-block: 5rem;
  }

  @media (min-width: 105rem) {
    margin-block: 6.5rem;
  }
}

.horizontal-rule--full {
  position: relative;
  inset-inline: -50vw;
  width: 150vw;
}

/* ** Grid Layout Styles **  */
main > .section > .grid-container {
  margin-block: 1.25rem;

  @media (min-width: 22.5rem) {
    margin-block: 2rem;
  }

  @media (min-width: 48rem) {
    margin-block: 4rem;
  }
}

.grid-container {
  /* flexbox fallback */
  display: flex;
  gap: 1rem;

  @media (min-width: 22.5rem) {
    flex-wrap: wrap;
  }

  @supports (display: grid) {
    display: grid;
    max-width: 100%;
    grid-template-columns: repeat(8, [col] 1fr);
    grid-column-gap: 1rem;
    grid-row-gap: 1rem;

    @media (min-width: 48rem) {
      grid-template-columns: repeat(12, [col] 1fr);
      grid-column-gap: 1.5rem;
      grid-row-gap: 1.5rem;
    }
  }
}

.grid-container--large-gap {
  gap: 4rem;

  @supports (display: grid) {
    @media (min-width: 22.5rem) {
      grid-column-gap: 4rem;
      grid-row-gap: 4rem;
    }
  }
}

.grid-container--with-scroll {
  overflow-x: scroll;

  @media (min-width: 36rem) {
    overflow-x: unset;
  }

  @supports (display: grid) {
    grid-auto-flow: column;
    grid-auto-columns: var(--horizontal-scroll-block-width);

    @media (min-width: 36rem) {
      grid-auto-flow: unset;
      grid-auto-columns: unset;
    }
  }
}

.grid-item {
  min-height: 0;
  min-width: 0;
  align-self: center;
}

.grid-item--100 {
  grid-column: span 8;

  @media (min-width: 48rem) {
    grid-column: span 12;
  }
}

.grid-item--66 {
  grid-column: span 8;

  .grid-container--with-scroll & {
    grid-column: unset;
    width: var(--horizontal-scroll-block-width);

    @media (min-width: 36rem) {
      grid-column: span 8;
      width: unset;
    }

    @media (min-width: 48rem) {
      grid-column: span 8;
    }
  }
}

.grid-item--50 {
  grid-column: span 8;

  @media (min-width: 48rem) {
    grid-column: span 6;
  }

  .grid-container--with-scroll & {
    grid-column: unset;
    width: var(--horizontal-scroll-block-width);

    @media (min-width: 36rem) {
      grid-column: span 8;
      width: unset;
    }

    @media (min-width: 48rem) {
      grid-column: span 6;
    }
  }
}

.grid-item--33 {
  grid-column: span 8;

  @media (min-width: 48rem) {
    grid-column: span 4;
  }

  .grid-container--with-scroll & {
    grid-column: unset;
    width: var(--horizontal-scroll-block-width);

    @media (min-width: 36rem) {
      grid-column: span 8;
      width: unset;
    }

    @media (min-width: 48rem) {
      grid-column: span 4;
    }
  }
}

.grid-item--30 {
  grid-column: span 8;

  @media (min-width: 22.5rem) {
    grid-column: span 4;
  }

  .grid-container--with-scroll & {
    grid-column: unset;
    width: var(--horizontal-scroll-block-width);

    @media (min-width: 36rem) {
      grid-column: span 4;
      width: unset;
    }
  }
}

.grid-item--25 {
  grid-column: span 8;

  @media (min-width: 22.5rem) {
    grid-column: span 4;
  }

  @media (min-width: 48rem) {
    grid-column: span 3;
  }

  .grid-container--with-scroll & {
    grid-column: unset;
    width: var(--horizontal-scroll-block-width);

    @media (min-width: 36rem) {
      grid-column: span 4;
      width: unset;
    }

    @media (min-width: 48rem) {
      grid-column: span 3;
    }
  }
}

/* ** Utility Classes ** */

.util-visually-hidden {
  position: fixed;
  right: 100%;
  bottom: 100%;
  clip: rect(1px, 1px, 1px, 1px);
  clip-path: inset(50%);

  &:focus {
    left: 0;
    right: auto;
    top: 0;
    bottom: auto;
    clip: auto;
    clip-path: none;
  }
}

.util-skip-link {
  position: fixed;
  right: 100%;
  bottom: 100%;
  clip: rect(1px, 1px, 1px, 1px);
  clip-path: inset(50%);

  &:focus {
    visibility: visible;
    display: block;
    background-color: var(--color-background);
    color: var(--color-text);
    padding: 1rem;
    box-shadow: 0 0 0 3px var(--spectrum-black), 0 0 0 6px var(--spectrum-white) !important;
    position: absolute;
    z-index: 9999;
    top: 1rem;
    left: 50%;
    transform: translateX(-50%);
    right: auto;
    bottom: auto;
    clip: auto;
    clip-path: none;

    /* importants override default link style */
    text-decoration: underline !important;
    font-size: var(--spectrum-body-size-m);
  }

  &:hover {
    text-decoration: none !important;
    cursor: pointer;
  }
}

.util-contained-width {
  /* consistent, responsive page width utility */
  max-width: 100%;
  margin-inline: var(--page-gutters);

  @media (min-width: 100rem) {
    margin-inline: auto;
    max-width: var(--page-max-width);
  }
}

/* ** Type Utilities ** */

.util-heading-xxl {
  font-family: var(--heading-font-family);
  line-height: var(--heading-line-height);
  font-size: var(--spectrum-heading-size-xxl);
  font-weight: var(--spectrum-heading-weight-xxl);
}

.util-heading-xl {
  font-family: var(--heading-font-family);
  line-height: var(--heading-line-height);
  font-size: var(--spectrum-heading-size-xl);
  font-weight: var(--spectrum-heading-weight-xl);
}

.util-heading-l {
  font-family: var(--heading-font-family);
  line-height: var(--heading-line-height);
  font-size: var(--spectrum-heading-size-l);
  font-weight: var(--spectrum-heading-weight-l);
}

.util-heading-m {
  font-family: var(--heading-font-family);
  line-height: var(--heading-line-height);
  font-size: var(--spectrum-heading-size-m);
  font-weight: var(--spectrum-heading-weight-m);
}

.util-heading-s {
  font-family: var(--heading-font-family);
  line-height: var(--heading-line-height);
  font-size: var(--spectrum-heading-size-s);
  font-weight: var(--spectrum-heading-weight-s);
}

.util-heading-quote {
  font-family: var(--spectrum-serif-font-family-stack);
  font-size: var(--spectrum-font-size-400);
  font-weight: var(--spectrum-medium-font-weight);

  @media (min-width: 48rem) {
    font-size: var(--spectrum-font-size-700);
  }

  @media (min-width: 80rem) {
    font-size: var(--spectrum-font-size-800);
  }

  @media (min-width: 105rem) {
    font-size: var(--spectrum-font-size-900);
  }
}

.util-title-xxxl {
  font-family: var(--title-font-family);
  line-height: var(--title-line-height);
  font-size: var(--spectrum-title-size-xxxl);
  font-weight: var(--spectrum-title-weight-xl);
}

.util-title-xxl {
  font-family: var(--title-font-family);
  line-height: var(--title-line-height);
  font-size: var(--spectrum-title-size-xxl);
  font-weight: var(--spectrum-title-weight-xxl);
}

.util-title-xl {
  font-family: var(--title-font-family);
  line-height: var(--title-line-height);
  font-size: var(--spectrum-title-size-xl);
  font-weight: var(--spectrum-title-weight-xl);
}

.util-title-l {
  font-family: var(--title-font-family);
  line-height: var(--title-line-height);
  font-size: var(--spectrum-title-size-l);
  font-weight: var(--spectrum-title-weight-l);
}

.util-title-m {
  font-family: var(--title-font-family);
  line-height: var(--title-line-height);
  font-size: var(--spectrum-title-size-m);
  font-weight: var(--spectrum-title-weight-m);
}

.util-title-s {
  font-family: var(--title-font-family);
  line-height: var(--title-line-height);
  font-size: var(--spectrum-title-size-s);
  font-weight: var(--spectrum-title-weight-s);
}

.util-title-xs {
  font-family: var(--title-font-family);
  line-height: var(--title-line-height);
  font-size: var(--spectrum-title-size-xs);
  font-weight: var(--spectrum-title-weight-xs);
}

.util-detail-l {
  font-family: var(--detail-font-family);
  line-height: var(--detail-line-height);
  font-size: var(--spectrum-detail-size-l);
  font-weight: var(--detail-font-weight);
}

.util-detail-m {
  font-family: var(--detail-font-family);
  line-height: var(--detail-line-height);
  font-size: var(--spectrum-detail-size-m);
  font-weight: var(--detail-font-weight);
}

.util-detail-s {
  font-family: var(--detail-font-family);
  line-height: var(--detail-line-height);
  font-size: var(--spectrum-detail-size-s);
  font-weight: var(--detail-font-weight);
}

.util-body-xl {
  font-family: var(--body-font-family);
  line-height: var(--body-line-height);
  font-size: var(--spectrum-body-size-xl);
  font-weight: var(--body-font-weight);
}

.util-body-l {
  font-family: var(--body-font-family);
  line-height: var(--body-line-height);
  font-size: var(--spectrum-body-size-l);
  font-weight: var(--body-font-weight);
}

.util-body-m {
  font-family: var(--body-font-family);
  line-height: var(--body-line-height);
  font-size: var(--spectrum-body-size-m);
  font-weight: var(--body-font-weight);
}

.util-body-s {
  font-family: var(--body-font-family);
  line-height: var(--body-line-height);
  font-size: var(--spectrum-body-size-s);
  font-weight: var(--body-font-weight);
}

.util-body-xs {
  font-family: var(--body-font-family);
  line-height: var(--body-line-height);
  font-size: var(--spectrum-body-size-xs);
  font-weight: var(--body-font-weight);
}

.util-medium-font-weight {
  font-weight: var(--spectrum-medium-font-weight);
}

.util-bold-font-weight {
  font-weight: var(--spectrum-bold-font-weight);
}

.util-extra-bold-font-weight {
  font-weight: var(--spectrum-extra-bold-font-weight);
}

.util-black-font-weight {
  font-weight: var(--spectrum-black-font-weight);
}

.util-constrained-text {
  max-width: var(--page-constrained-text);
}

/* ** Page Themes ** */

/* Theme gradient backgrounds also include a color above the gradient to account for overscroll area underneath the sticky nav. */
.theme {
  --page-bg-overscroll-color: var(--color-background);
  --page-background: var(--page-bg-main-gradient), linear-gradient(var(--page-bg-overscroll-color) 0%, var(--page-bg-overscroll-color) 100%);
  --page-background-position: left top 64px, left top;
  --page-background-size: 100% calc(var(--page-bg-height) - 64px), 100% 64px;
}

/* -- Simple color themes with only a gradient. -- */
.theme--green {
  --page-bg-main-gradient: var(--gradient-green);
  --page-bg-overscroll-color: var(--spectrum-green-300);
}

.theme--blue {
  --page-bg-main-gradient: var(--gradient-blue);
}

.theme--seafoam {
  --page-bg-main-gradient: var(--gradient-seafoam);
}

.theme--cyan-500 {
  --page-bg-main-gradient: var(--gradient-cyan-500);
}

.theme--cyan-600 {
  --page-bg-main-gradient: var(--gradient-cyan-600);
}

.theme--indigo-dark {
  --page-bg-main-gradient: var(--gradient-indigo-dark);
}

.theme--indigo-light {
  --page-bg-main-gradient: var(--gradient-indigo-light);
}

/* -- Main page "hero" themes' with overlaid SVG shapes. -- */
.bg-visuals {
  position: absolute;
  overflow: hidden;
  z-index: -1;
  pointer-events: none;
  left: 0;
  top: 0;
  width: 100%;
  height: var(--page-bg-height, 0px);

  /* Blend bottom to background, on top of shapes. */
  &::after {
    display: block;
    content: '';
    position: absolute;
    bottom: 0;
    left: 0;
    width: 100%;
    height: 225px;
    background: linear-gradient(180deg, rgb(from var(--color-background) r g b / 0) 0%, var(--color-background) 100%);
  }
}

.theme--hero-indigo {
  --page-bg-overscroll-color: var(--gradient-indigo-dark-start);
  --page-bg-main-gradient: var(--gradient-indigo-dark);
  --diamond-fill: rgb(116 91 252);

  &:has(#color-scheme:checked) {
    --diamond-fill: rgb(99 56 238);
  }
}

.theme--hero-green {
  --page-bg-overscroll-color: var(--spectrum-green-300);
  --page-bg-main-gradient: var(--gradient-green);
  --diamond-fill: var(--spectrum-green-600);
}

.theme--hero-indigo .bg-visuals .shape-diamond,
.theme--hero-green .bg-visuals .shape-diamond {
  position: absolute;
  inset: -57px auto auto -327px;
  min-height: 100%;

  @media (min-width: 48rem) {
    inset: -113px -316px auto auto;
    width: 168%;
  }

  @media (min-width: 80rem) {
    inset: -154px -320px auto auto;
    width: auto;
  }

  @media (min-width: 105rem) {
    inset: 0 0 auto auto;
  }

  @media (min-width: 120rem) {
    inset: 0 0 auto 32.7%;
    width: 67.3%;
  }
}
